define("ebla-admin-pro:views/role/record/table","views/role/record/table",function(t){return t.extend({setup:function(){t.prototype.setup.call(this),this.template="ebla-admin-pro:role/table"},data:function(){return{...t.prototype.data.call(this),entityType:this.options.entityType}},setupScopeList:function(){this.aclTypeMap={},this.scopeList=[],Object.keys(this.acl.data.table).forEach(function(t){this.scopeList.push(t),this.aclTypeMap[t]=this.acl.data.table[t]},this)},afterRender:function(){t.prototype.afterRender.call(this),this.$el.find(".panel-title").hide()},getTableDataList:function(){const o=this.acl.data.table,e=[];return this.scopeList.forEach(function(a){let s="not-set";this.final&&(s="enabled"),a in o&&(s=!1===o[a]?"disabled":"enabled");const n=[],l=this.aclTypeMap[a];"boolean"!==this.aclTypeMap[a]&&this.actionList.forEach(function(i){var t=this.getMetadata().get(["scopes",a,this.type+"ActionList"]);if(t&&!~t.indexOf(i))n.push({action:i,levelList:!1,level:null});else{let t="no",e=(~this.booleanActionList.indexOf(i)&&(t="no"),a in o&&("enabled"===s?!0!==o[a]&&i in o[a]&&(t=o[a][i]):t="no"),this.getMetadata().get(["scopes",a,this.type+"ActionLevelListMap",i])||this.getMetadata().get(["scopes",a,this.type+"LevelList"])||this.levelListMap[l]||[]);~this.booleanActionList.indexOf(i)&&(e=this.booleanLevelList),n.push({level:t,name:a+"-"+i,action:i,levelList:e})}},this);var t=this.acl.data.list.find(t=>t.id===a);e.push({list:n,access:s,name:a,label:t.name??a,type:this.acl.data.scope||l})},this),e}})});