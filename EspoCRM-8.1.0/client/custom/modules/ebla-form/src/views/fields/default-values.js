define("ebla-form:views/fields/default-values","views/fields/base",function(e){return e.extend({detailTemplate:"ebla-form:views/fields/default-values/detail",editTemplate:"ebla-form:views/fields/default-values/edit",defaultValues:{},additionalFields:[],events:{'click a[data-action="addField"]':function(e){var t=$(e.currentTarget).data("name");$(e.currentTarget).parent().addClass("hidden"),this.addField(t)},'click a[data-action="removeField"]':function(e){var e=$(e.currentTarget).data("name"),t=(this.$el.find('a[data-action="addField"]').parent().removeClass("hidden"),this.additionalFields.indexOf(e));~t&&this.additionalFields.splice(t,1),this.$el.find('.field[data-name="'+e+'"]').parent().remove()}},data:function(){return{scope:this.scope,fieldList:this.getFieldList()}},getAttributeList:function(){return[this.name]},setup:function(){var e;this.scope=this.model.get("entity"),this.model.isNew()||(e=this.model.get(this.name)||{},this.additionalFields=e.additionalFields||this.additionalFields,this.defaultValues=e.defaultValues||this.defaultValues),this.wait(!0),this.getModelFactory().create(this.scope,function(e){this.model2=e,this.model2.set(this.defaultValues),this.wait(!1)},this),this.model.on("change:entity",function(){this.scope=this.model.get("entity"),this.additionalFields=[],this.defaultValues={},this.reRender()}.bind(this))},afterRender:function(){$("#default-values-container").empty(),this.model.isNew()?(this.$el.find(".dropdown-toggle").prop("disabled",!0),this.$el.append('<div class="alert alert-warning">Please save the form before setting default values.</div>')):(this.$el.find(".dropdown-toggle").prop("disabled",!1),this.additionalFields.forEach(function(e){this.addField(e)}.bind(this)))},getFieldList:function(){var e=this.getMetadata().get("entityDefs."+this.scope+".fields"),t=this.getAcl().getScopeForbiddenFieldList(this.scope,"edit");let i=[];for(const a in e)~t.indexOf(a)||~this.additionalFields.indexOf(a)||i.push(a);return i=i.sort(function(e,t){return this.translate(e,"fields",this.scope).localeCompare(this.translate(t,"fields",this.scope))}.bind(this))},addField:function(t){$(this.containerSelector+' button[data-name="update"]').removeClass("disabled"),this.notify("Loading...");var e=this.translate(t,"fields",this.scope);let i="";e='<div class="cell form-group col-sm-3">'+(i="edit"===this.mode?'<a role="button:" class="pull-right" data-action="removeField" data-name="'+t+'"><span class="fas fa-times"></span></a>':i)+'<label class="control-label">'+e+'</label><div class="field" data-name="'+t+'"/></div>',$("#default-values-container").append(e),e=Espo.Utils.upperCaseFirst(this.model2.getFieldParam(t,"type")),e=this.getMetadata().get(["entityDefs",this.scope,"fields",t,"view"])||this.getFieldManager().getViewName(e);this.createView(t,e,{model:this.model2,el:this.getSelector()+' .field[data-name="'+t+'"]',defs:{name:t},mode:this.mode,readOnlyDisabled:!0},function(e){-1===this.additionalFields.indexOf(t)&&this.additionalFields.push(t),e.render(),e.notify(!1)}.bind(this))},fetch:function(){const t={};this.additionalFields.forEach(function(e){e=this.getView(e);_.extend(t,e.fetch())},this),this.model2.set(t);var e={};return e[this.name]={additionalFields:Espo.Utils.cloneDeep(this.additionalFields),defaultValues:t},e}})});